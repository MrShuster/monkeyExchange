{"ast":null,"code":"var _jsxFileName = \"/home/thinkpad/WebstormProjects/exchange/src/components/ExchangeApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport InputEx from './InputEx';\nimport ScoreEx from './ScoreEx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExchangeApp() {\n  _s();\n  const [currencies, setCurrencies] = useState([]);\n  const [baseAmount, setBaseAmount] = useState(100);\n  const [baseCurrency, setBaseCurrency] = useState('USD');\n  const [targetCurrency, setTargetCurrency] = useState('ILS');\n  const [conversionRate, setConversionRate] = useState({});\n  const [result, setResult] = useState(0);\n  const [date, setDate] = useState(new Date());\n  useEffect(() => {\n    axios.get('https://monkeys.co.il/api2/currency.php').then(response => {\n      setCurrencies(Object.keys(response.data.quotes).map(key => key.substr(3)));\n      setConversionRate(response.data.quotes);\n    });\n  }, []);\n  useEffect(() => {\n    const convertToUSD = 1 / (conversionRate[`${baseCurrency}USD`] || 1);\n    const rateFromUSD = conversionRate[`${targetCurrency}USD`] || 1;\n    const rate = convertToUSD * rateFromUSD;\n    setResult(baseAmount * rate);\n    setDate(new Date());\n  }, [baseCurrency, targetCurrency, baseAmount, conversionRate]);\n  const swapCurrencies = () => {\n    setBaseCurrency(targetCurrency);\n    setTargetCurrency(baseCurrency);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(InputEx, {\n      value: baseAmount,\n      onChange: e => setBaseAmount(e.target.value),\n      currencies: currencies,\n      selectedCurrency: baseCurrency,\n      onCurrencyChange: e => setBaseCurrency(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: swapCurrencies,\n      children: \"Swap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputEx, {\n      currencies: currencies,\n      selectedCurrency: targetCurrency,\n      onCurrencyChange: e => setTargetCurrency(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScoreEx, {\n      result: result,\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(ExchangeApp, \"fo4GTfSDwlnmiwaCPp2acfv6ACw=\");\n_c = ExchangeApp;\nexport default ExchangeApp;\nvar _c;\n$RefreshReg$(_c, \"ExchangeApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","InputEx","ScoreEx","jsxDEV","_jsxDEV","ExchangeApp","_s","currencies","setCurrencies","baseAmount","setBaseAmount","baseCurrency","setBaseCurrency","targetCurrency","setTargetCurrency","conversionRate","setConversionRate","result","setResult","date","setDate","Date","get","then","response","Object","keys","data","quotes","map","key","substr","convertToUSD","rateFromUSD","rate","swapCurrencies","children","value","onChange","e","target","selectedCurrency","onCurrencyChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/thinkpad/WebstormProjects/exchange/src/components/ExchangeApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport InputEx from './InputEx';\nimport ScoreEx from './ScoreEx';\n\nfunction ExchangeApp() {\n    const [currencies, setCurrencies] = useState([]);\n    const [baseAmount, setBaseAmount] = useState(100);\n    const [baseCurrency, setBaseCurrency] = useState('USD');\n    const [targetCurrency, setTargetCurrency] = useState('ILS');\n    const [conversionRate, setConversionRate] = useState({});\n    const [result, setResult] = useState(0);\n    const [date, setDate] = useState(new Date());\n\n    useEffect(() => {\n        axios.get('https://monkeys.co.il/api2/currency.php').then(response => {\n            setCurrencies(Object.keys(response.data.quotes).map(key => key.substr(3)));\n            setConversionRate(response.data.quotes);\n        });\n    }, []);\n\n    useEffect(() => {\n        const convertToUSD = 1 / (conversionRate[`${baseCurrency}USD`] || 1);\n        const rateFromUSD = conversionRate[`${targetCurrency}USD`] || 1;\n        const rate = convertToUSD * rateFromUSD;\n\n        setResult(baseAmount * rate);\n        setDate(new Date());\n    }, [baseCurrency, targetCurrency, baseAmount, conversionRate]);\n\n    const swapCurrencies = () => {\n        setBaseCurrency(targetCurrency);\n        setTargetCurrency(baseCurrency);\n    };\n\n    return (\n        <div>\n            <InputEx\n                value={baseAmount}\n                onChange={(e) => setBaseAmount(e.target.value)}\n                currencies={currencies}\n                selectedCurrency={baseCurrency}\n                onCurrencyChange={(e) => setBaseCurrency(e.target.value)}\n            />\n            <button onClick={swapCurrencies}>Swap</button>\n            <InputEx\n                currencies={currencies}\n                selectedCurrency={targetCurrency}\n                onCurrencyChange={(e) => setTargetCurrency(e.target.value)}\n            />\n            <ScoreEx result={result} date={date} />\n        </div>\n    );\n}\n\nexport default ExchangeApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EACjD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACqB,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,IAAIuB,IAAI,CAAC,CAAC,CAAC;EAE5CtB,SAAS,CAAC,MAAM;IACZC,KAAK,CAACsB,GAAG,CAAC,yCAAyC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MAClEhB,aAAa,CAACiB,MAAM,CAACC,IAAI,CAACF,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAC,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1Ef,iBAAiB,CAACQ,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAC;IAC3C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN7B,SAAS,CAAC,MAAM;IACZ,MAAMiC,YAAY,GAAG,CAAC,IAAIjB,cAAc,CAAE,GAAEJ,YAAa,KAAI,CAAC,IAAI,CAAC,CAAC;IACpE,MAAMsB,WAAW,GAAGlB,cAAc,CAAE,GAAEF,cAAe,KAAI,CAAC,IAAI,CAAC;IAC/D,MAAMqB,IAAI,GAAGF,YAAY,GAAGC,WAAW;IAEvCf,SAAS,CAACT,UAAU,GAAGyB,IAAI,CAAC;IAC5Bd,OAAO,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;EACvB,CAAC,EAAE,CAACV,YAAY,EAAEE,cAAc,EAAEJ,UAAU,EAAEM,cAAc,CAAC,CAAC;EAE9D,MAAMoB,cAAc,GAAGA,CAAA,KAAM;IACzBvB,eAAe,CAACC,cAAc,CAAC;IAC/BC,iBAAiB,CAACH,YAAY,CAAC;EACnC,CAAC;EAED,oBACIP,OAAA;IAAAgC,QAAA,gBACIhC,OAAA,CAACH,OAAO;MACJoC,KAAK,EAAE5B,UAAW;MAClB6B,QAAQ,EAAGC,CAAC,IAAK7B,aAAa,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/C9B,UAAU,EAAEA,UAAW;MACvBkC,gBAAgB,EAAE9B,YAAa;MAC/B+B,gBAAgB,EAAGH,CAAC,IAAK3B,eAAe,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eACF1C,OAAA;MAAQ2C,OAAO,EAAEZ,cAAe;MAAAC,QAAA,EAAC;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9C1C,OAAA,CAACH,OAAO;MACJM,UAAU,EAAEA,UAAW;MACvBkC,gBAAgB,EAAE5B,cAAe;MACjC6B,gBAAgB,EAAGH,CAAC,IAAKzB,iBAAiB,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACF1C,OAAA,CAACF,OAAO;MAACe,MAAM,EAAEA,MAAO;MAACE,IAAI,EAAEA;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEd;AAACxC,EAAA,CAhDQD,WAAW;AAAA2C,EAAA,GAAX3C,WAAW;AAkDpB,eAAeA,WAAW;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}